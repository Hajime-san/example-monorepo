name: 'typescript: Deployment changed app'

on:
  pull_request:
    types: [closed]

env:
  NODE_VERSION: 18
  DEPLOYMENT_LIST: ("docs" "web")

jobs:
  set-matrix:
    # run on changeset-bot PR merged 
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'changeset-release')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: typescript-turbo
    outputs:
      deployment_list: ${{ steps.set-matrix.outputs.value }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # - name: cache node_modules
    #   id: node_modules_cache_id
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.npm
    #     key: node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       node-v${{ env.NODE_VERSION }}-deps-
    #       node-v${{ env.NODE_VERSION }}-
    #       node-v

    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: install node modules
      # if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
      run: npm ci
      
    - name: make deployment list value
      id: set-matrix
      # remove root package '//' defined by turbo
      run: |
          list=$(npx turbo run build --filter=!\// --filter=\[HEAD^1] --dry=json | jq -c '.packages')
          echo $list
          echo "value=${list}" >> $GITHUB_OUTPUT

  deployment:
    needs: set-matrix
    if: ${{ needs.set-matrix.outputs.deployment_list != '' && toJson(fromJson(needs.set-matrix.outputs.deployment_list)) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        deployment_list: ${{fromJson(needs.set-matrix.outputs.deployment_list)}}
    steps:
      - name: "deployment: ${{ matrix.deployment_list }}"
        if: contains(env.DEPLOYMENT_LIST, matrix.deployment_list)
        run: echo "Deployment app name is ${{ matrix.deployment_list }}"